/*
 Pseudocode:
 create a set of numbers.
 for element in nums
    if set does not have element -1 in nums:
        get length of the set
        if lenght> max
            max= length;
*/
class Solution 
{
    public int longestConsecutive(int[] nums) 
    {
        if (nums.length == 0) return 0;

        HashSet<Integer> set= new HashSet<Integer>();
        for (int num: nums)
        {
            set.add(num);
        }

        int max = Integer.MIN_VALUE;

        for (int num: nums)
        {
            if (!set.contains(num-1))
            {
                int sequenceLength = getSequenceLength(set, num);
                if (sequenceLength>max)
                {
                    max = sequenceLength;
                }
            }
        }

        return max;
    }

    public int getSequenceLength(HashSet<Integer> set, int num)
    {
        int count = 1;
        boolean goOn =true;
        num++;
        while (goOn)
        {
            if (set.contains(num))
            {
                count++;
                num++;
            }

            else goOn = false;
        }

        return count;
    }
}